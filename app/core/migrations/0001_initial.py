# Generated by Django 4.1.2 on 2022-10-31 13:55

import core.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Package',
            fields=[
                ('code', models.CharField(max_length=50, primary_key=True, serialize=False, unique=True, validators=[django.core.validators.MinLengthValidator(5), django.core.validators.RegexValidator(message='Only uppercase, numbers and underscore.', regex='\\b[A-Z0-9_]+\\b')])),
                ('name', models.CharField(max_length=255, validators=[django.core.validators.MinLengthValidator(5), django.core.validators.RegexValidator(message='Only Alphanumeric, underscore and score.', regex='\\b[a-zA-Z0-9_-]+\\b')])),
                ('weight', models.IntegerField(validators=[django.core.validators.MaxValueValidator(500), django.core.validators.MinValueValidator(1)])),
                ('image', models.ImageField(null=True, upload_to=core.models.package_image_file_path)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Robot',
            fields=[
                ('serial_number', models.CharField(max_length=100, primary_key=True, serialize=False, unique=True, validators=[django.core.validators.MinLengthValidator(5)])),
                ('robot_model', models.IntegerField(choices=[(0, 'Lightweight'), (1, 'Middleweight'), (2, 'Cruiserweight'), (3, 'Heavyweight')], default=0)),
                ('weight_limit', models.IntegerField(validators=[django.core.validators.MaxValueValidator(500), django.core.validators.MinValueValidator(1)])),
                ('battery', models.IntegerField(default=100, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)])),
                ('state', models.IntegerField(choices=[(0, 'Idle'), (1, 'Loading'), (2, 'Loaded'), (3, 'Delivering'), (4, 'Delivered'), (5, 'Returning')], default=0)),
                ('packages', models.ManyToManyField(to='core.package')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
